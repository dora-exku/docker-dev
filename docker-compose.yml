networks:
  backend:
    driver: bridge

services:
  # nginx:
  #   build: ./nginx
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ${CODE_DIR}:/var/www
  #     - ./nginx/sites:/etc/nginx/conf.d
  #   networks:
  #     - backend

  caddy:
    build: ./caddy
    container_name: caddy
    ports:
      - "80:80"
    volumes:
      - ${CODE_DIR}:/var/www
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/snippets:/etc/caddy/snippets
    networks:
      - backend

  php-fpm-74:
    build: ./php-fpm-74
    container_name: php-fpm74
    volumes:
      - ${CODE_DIR}:/var/www
    networks:
      - backend

  php-fpm-80:
    build: ./php-fpm-80
    container_name: php-fpm80
    volumes:
      - ${CODE_DIR}:/var/www
    networks:
      - backend

  php-fpm-82:
    build: ./php-fpm-82
    container_name: php-fpm82
    ports:
      - "9501:9501"
      - "9082:9003"
    volumes:
      - ${CODE_DIR}:/var/www
    networks:
      - backend

  php-fpm-83:
    build: ./php-fpm-83
    container_name: php-fpm83
    ports:
      - "9083:9003"
    volumes:
      - ${CODE_DIR}:/var/www
    networks:
      - backend

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    container_name: mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend

  postgres:
    build: ./postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH}/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - backend

  redis:
    build: ./redis
    container_name: redis
    volumes:
      - ${DATA_PATH}/redis:/data
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  mongo:
    build: ./mongo
    container_name: mongo
    volumes:
      - ${DATA_PATH}/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - backend

  mailpit:
    build: ./mailpit
    container_name: mailpit
    ports:
      - "${MAILPIT_WEB_PORT}:8025"
    networks:
      - backend
